import { CreatePaymentSlipDto } from '../../api/dto/payment-slip/create-payment-slip.dto';
import { UpdatePaymentSlipDto } from '../../api/dto/payment-slip/update-payment-slip.dto';
import { Repository } from 'typeorm';
import { PaymentSlip } from '../../entities/payment-slip.entity';
import { Isp } from '../../entities/isp.entity';
import { Customer } from '../../entities/customer.entity';
export declare class PaymentSlipService {
    private paymentSlipRepository;
    private ispRepository;
    private customerRepository;
    private relations;
    constructor(paymentSlipRepository: Repository<PaymentSlip>, ispRepository: Repository<Isp>, customerRepository: Repository<Customer>);
    create(createPaymentSlipDto: CreatePaymentSlipDto): Promise<PaymentSlip>;
    createMany(createPaymentSlipDtos: CreatePaymentSlipDto[]): Promise<any[]>;
    saveMany(updatePaymentSlipDtos: CreatePaymentSlipDto[]): Promise<any[]>;
    findAll(): Promise<any[]>;
    updateAllPaymentSlips(): Promise<void>;
    findAllBy(options: any): Promise<any[]>;
    findOne(id: number): Promise<PaymentSlip>;
    update(id: number, updatePaymentSlipDto: UpdatePaymentSlipDto): Promise<{
        poziv_na_broj_primatelja: string;
        isp_id: number;
        customer_id: number;
        id: number;
        mjesec: number;
        godina: number;
        customer: Customer;
        isp: Isp;
        iznos: number;
        poziv_na_broj_platitelja: string;
        iban_primatelja: string;
        iban_platitelja: string;
        model_primatelja: string;
        model_platitelja: string;
        sifra_namjene: string;
        datum_izvrsenja: string;
        valuta_placanja: string;
        hitno: string;
        ime_i_prezime_platitelja: string;
        ulica_i_broj_platitelja: string;
        ulica_i_broj_primatelja: string;
        postanski_i_grad_platitelja: string;
        postanski_i_grad_primatelja: string;
        naziv_primatelja: string;
        opis_placanja: string;
        nalog: string;
        inserted_at: Date;
        updated_at: Date;
        deleted_at: Date;
    } & PaymentSlip>;
    remove(id: number): Promise<import("typeorm").DeleteResult>;
}
